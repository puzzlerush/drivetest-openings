{"version":3,"sources":["components/Listing.js","components/Header.js","components/Filter.js","App.js","index.js"],"names":["moment","require","Listing","props","openingList","openings","map","opening","id","_id","key","scope","location","date","tz","format","className","Header","Filter","startDate","endDate","class","type","placeholder","onChange","e","target","value","setFilter","setStartDate","setEndDate","getOpenings","data","App","useState","setData","fetchData","a","fetch","then","res","json","console","log","useEffect","filter","add","filteredOpenings","re","RegExp","test","includes","openingsInRange","start","end","formatDate","formatStart","formatEnd","isBefore","isSame","isAfter","dateIsBetween","getLastUpdated","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29f3d7a4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nvar moment = require('moment-timezone');\r\n\r\nexport default function Listing(props) {\r\n  \r\n  const openingList = props.openings.map(\r\n    function(opening) {\r\n      return (\r\n        <tr id={opening._id} key={opening._id}>\r\n          <td scope=\"col\">{opening.location}</td>\r\n          <td>{moment(opening.date).tz(\"America/New_York\").format(\"LL\")}</td>\r\n        </tr>\r\n      );\r\n    }\r\n  );\r\n  \r\n  return (\r\n    <div className=\"table-wrapper\">\r\n      <div className=\"table-scroll\">\r\n        <table className=\"table table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Location</th>\r\n              <th scope=\"col\">Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {openingList}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      DriveTest Openings - Waterloo Region (G2)\r\n    </div>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nfunction Filter(props) {\r\n  function handleFilterChange(e) {\r\n    if (e.target.value) {\r\n      props.setFilter(e.target.value);\r\n    } else {\r\n      props.setFilter(\".*\");\r\n    }\r\n  }\r\n  \r\n  function handleStartChange(e) {\r\n    if (e.target.value) {\r\n      props.setStartDate(e.target.value);\r\n    }\r\n  }\r\n  \r\n  function handleEndChange(e) {\r\n    if (e.target.value) {\r\n      props.setEndDate(e.target.value);\r\n    }\r\n  }\r\n  \r\n  const startDate = moment(props.startDate).tz('America/New_York').format(\"YYYY-MM-DD\")\r\n  const endDate = moment(props.endDate).tz('America/New_York').format(\"YYYY-MM-DD\")\r\n  \r\n  return (\r\n    <div class=\"grid-container\">\r\n      <div class=\"grid-item grid-item-filter\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"filter-input\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search location\"\r\n          onChange={handleFilterChange}\r\n        />\r\n      </div>\r\n      <small class=\"grid-item grid-item-startlabel\">Showing openings from</small>\r\n      <div class=\"grid-item grid-item-startdate\">\r\n        <input \r\n          type=\"date\"\r\n          id=\"start-date\"\r\n          className=\"form-control\"\r\n          value={startDate}\r\n          onChange={handleStartChange}\r\n        />\r\n      </div>\r\n      <small class=\"grid-item grid-item-endlabel\">to</small>\r\n      <div class=\"grid-item grid-item-enddate\">\r\n        <input \r\n          type=\"date\"\r\n          id=\"end-date\"\r\n          className=\"form-control\"\r\n          value={endDate}\r\n          onChange={handleEndChange}\r\n        />\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Filter;","import React, { useEffect, useState } from 'react';\nimport Listing from \"./components/Listing\";\nimport Header from \"./components/Header\";\nimport Filter from \"./components/Filter\";\n\nvar moment = require('moment-timezone');\n\nfunction getLastUpdated(data) {\n  return moment(data[\"latest_update\"][\"time_updated\"]).tz(\"America/New_York\").format(\"LLLL\");\n}\n\nfunction getOpenings(data) {\n  return data[\"all_openings\"];\n}\n\nfunction dateIsBetween(date, start, end) {\n  const formatDate = moment(date).tz('America/New_York').format(\"YYYY-MM-DD\");\n  const formatStart = moment(start).tz('America/New_York').format(\"YYYY-MM-DD\");\n  const formatEnd = moment(end).tz('America/New_York').format(\"YYYY-MM-DD\");\n  return (moment(formatStart).tz('America/New_York').isBefore(formatDate) ||\n         moment(formatStart).tz('America/New_York').isSame(formatDate)) && \n         (moment(formatEnd).tz('America/New_York').isAfter(formatDate) ||\n         moment(formatEnd).tz('America/New_York').isSame(formatDate));\n}\n\nfunction App() {\n  \n  const [data, setData] = useState({\"latest_update\":{\"time_updated\":\"2020-08-11T01:51:19.983Z\",\"_id\":\"5f3c859779b1d5696c6c908b\"},\"all_openings\":[]});\n  \n  const fetchData = async () => {\n    const data = await fetch('/api/data').then(res => res.json());\n    console.log(data);\n    setData(data);\n  }\n  \n  useEffect(() => {\n    fetchData()\n  }, []);\n  \n  const [filter, setFilter] = useState(\".*\");\n  const [startDate, setStartDate] = useState(moment().tz('America/New_York'));\n  const [endDate, setEndDate] = useState(moment().tz('America/New_York').add(1, 'months'));\n  let filteredOpenings = getOpenings(data);\n  try {\n    const re = new RegExp(filter, 'i');\n    filteredOpenings = getOpenings(data).filter(opening => re.test(opening.location));\n  } catch(e) {\n    filteredOpenings = getOpenings(data).filter(opening => opening.location.includes(filter));\n  }\n  \n  let openingsInRange = filteredOpenings.filter(opening => dateIsBetween(opening.date, startDate, endDate));\n  \n  return (\n    <div className=\"container\">\n      <Header/>\n      <Filter \n        setFilter={setFilter}\n        startDate={startDate}\n        setStartDate={setStartDate}\n        endDate={endDate}\n        setEndDate={setEndDate}\n      />\n      <Listing openings={openingsInRange} />\n      <small className=\"footer text-muted m-4\">\n        Last updated {getLastUpdated(data)}\n      </small>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}